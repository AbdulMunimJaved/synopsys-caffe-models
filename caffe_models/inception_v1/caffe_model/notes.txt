Inception_v1.prototxt converted with TF2Caffe from Inception_v1 from https://github.com/tensorflow/models/tree/master/research/slim#Pretrained
Inception_v1.caffemodel converted from Tensorflow weights.
This prototxt model contains the pad_type parameter and must use the asymmetric padding Caffe patch for implementation.

Requires tensorflow preprocessing:
  img = cv2.imread(filename)
  b, g, r = cv2.split(img)
  rgb_img = cv2.merge([r, g, b])
  image_n = tf.stack(rgb_img)
  input_width = 299
  input_height = 299
  processed_image = inception_preprocessing.preprocess_image(image_n, input_width, input_height, is_training=False)
  processed_images = tf.expand_dims(processed_image, 0)

Following options are required for the preprocessing for host fixed:
  --color_order RGB
  --image_scale 1

Inception_v1-no_asym_padding.prototxt patched prototxt that does not require asymmetric padding
- can be used for benchmarking or power measurements
- functionally not correct because of wrong padding of the first layer (pad_left=3,pad_right=3 instead of pad_left=2,pad_right=3)

inception_v1_L2Norm_convert.prototxt: patched prototxt with L2 Normalization instead of Softmax

Compressed graphs:
1. compressed_51p.prototxt / compressed_51p.caffemodel / compress_config-51p.py
- 51% of original MACs (factor 1.98)
- Latest one saved in compressed/1.98

2. compressed_45p.prototxt / compressed_45p.caffemodel / compress_config-45p.py
- 45% of original MACs (factor 2.2)
- Latest one saved in compressed/2.2


Pruned Graphs
1. inception_v1_convert.prototxt / Inception_V1_drop_zero_1-73x_89.72.caffemodel (factor 1.73x)
2. inception_v1_convert.prototxt / Inception_V1_accuracy_drop_0-005_2-59x_89-30.caffemodel (factor 2.59x)
3. inception_v1_convert.prototxt / Inception_V1_2x_89-19.caffemodel (factor 2x)
4. compressed_51p.prototxt / compressed_51p_random_pruned.caffemodel (conv: 60%, fc: 85%)
